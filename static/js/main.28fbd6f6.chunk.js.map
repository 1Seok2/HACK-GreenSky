{"version":3,"sources":["assets/slimgslogo.jpg","components/navigation/NavBottom.tsx","components/map/PositionDistance.ts","components/alami/MakeSentence.tsx","components/navigation/OtherMenu.tsx","components/modal/ModalConents.tsx","components/modal/alertModal.tsx","components/alami/Tips.tsx","components/alami/Data.tsx","components/map/DayGapAcumulator.ts","components/map/Map.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBottom","className","id","src","MyLogoImg","alt","PositionDistance","props","disLat","Math","abs","lat","_lat","disLng","lng","_lng","sqrt","pow","floor","MakeSentence","GoodSentences","SosoSentences","BadSentences","TerrSentences","RandomNum","random","length","state","chooseSentence","OtherMenu","useState","aboutClicked","setAboutClicked","aria-label","role","type","onClick","e","preventDefault","wrapper","document","querySelector","classList","toggle","href","window","open","about","remove","add","ModalContent","content","AlertModal","thisModal","getElementsByClassName","idNum","contents","map","value","key","Tips","modal","modal2","Data","btnState","setBtnState","btnValue","setBtnValue","nowYear","nowMonth","nowDate","nowHour","nowMin","nowTime","setNowTime","useEffect","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getNowTime","console","log","alami","conditionFace","conditionTxt","conditionState","patientNum","data","getElementById","back","searchBtn","reloadBtn","tipsBtn","style","color","today","year","month","date","Months","DateGapAcumulator","gap","_month","_date","Map","accuracy","altitude","altitudeAccuracy","heading","speed","timestamp","now","error","setState","conditionBgColor","stateAlami","setStateAlami","countInCircle","setCountInCircle","latitude","setLatitude","longitude","setLongitude","search","setSearch","formState","setFormState","onEvent","event","coords","onError","message","makeArrayPatient","PatientInfo","Patient","mapData","daysGap","curDay","day","sliced","latlng","split","patient","position","address","parseFloat","makeMarkerInfected","colorRed","colorOrg","colorGrn","AddCount","prevCount","makeMarkerMyPos","markerPosition","kakao","maps","LatLng","Marker","setMap","Circle","center","radius","strokeWeight","strokeColor","strokeOpacity","strokeStyle","fillColor","fillOpacity","_patient","btn_search","form","menu_wrap","DeleteMapElements","deleteMap","hasChildNodes","removeChild","firstChild","init","Container","backgroundColor","navigator","geolocation","getCurrentPosition","script","createElement","async","process","head","appendChild","onload","load","container","options","level","obj","localStorage","setItem","JSON","stringify","onSubmit","size","markers","ps","services","Places","infowindow","InfoWindow","zIndex","displayInfowindow","marker","title","setContent","addMarker","idx","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","image","push","getListItem","index","places","el","itemStr","place_name","road_address_name","address_name","phone","innerHTML","displayPlaces","listEl","menuEl","fragment","createDocumentFragment","bounds","LatLngBounds","lastChild","removeAllChildNods","i","removeMarker","placePosition","y","x","itemEl","extend","addListener","close","onmouseover","onmouseout","scrollTop","setBounds","placesSearchCB","status","pagination","Status","OK","paginationEl","last","current","onclick","gotoPage","displayPagination","ZERO_RESULT","alert","ERROR","keyword","replace","keywordSearch","searchPlaces","onChange","target","loadedCoords","getItem","location","reload","parsedCoords","parse","callback","geocoder","Geocoder","getCenter","result","infoDiv","region_type","coord2RegionCode","getLng","getLat","App","basename","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.28fbd6f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slimgslogo.6d11455c.jpg\";","import React from 'react';\nimport MyLogoImg from '../../assets/slimgslogo.jpg';\n\nconst NavBottom = () => {\n    return (\n        <>\n            <div className=\"nav-bottom\">\n                <img id=\"mylogo\" src={MyLogoImg} alt=\"logo\"/>\n            </div>\n        </>\n    ); \n}\n\nexport default NavBottom;","interface DistanceProps {\n    lat : number,\n    lng : number,\n    _lat : number,\n    _lng : number\n}\n\nconst PositionDistance = (props:DistanceProps) : number => {\n\n  let dis = 0;\n    let disLat : number = Math.abs(props.lat-props._lat);\n    let disLng = Math.abs(props.lng-props._lng);\n    dis = Math.sqrt(Math.pow((disLat%100 * 88804 + Math.floor((disLat-disLat%100)*100)*1480\n          + (disLat*100-Math.floor(disLat*100))*24.668),2)\n          + Math.pow((disLng%100 * 88804 + Math.floor((disLng-disLng%100)*100)*1480\n          + (disLng*100-Math.floor(disLng*100))*24.668),2));\n    return dis;\n}\n\nexport default PositionDistance;","import React from 'react';\n\ninterface SentenceProps {\n    state : string\n}\n\nconst MakeSentence = (props : SentenceProps) => {\n    const GoodSentences = [\n        \"이 주변은 청정지역 !\",\n        \"개인위생 철저히 지켜주시며 다니세요\",\n        \"밀린 장을 보러 가볼까요 ?\",\n        \"친목 때도 조심 ! 아시죠 ?\",\n        \"사회적 거리두기는 지켜주세요\",\n        \"미뤄뒀던 미용실을 가볼까요 ?\",\n        \"타지역의 사람을 믿지 마세요\",\n        \"그래도 실내는 언제나 조심 !\",\n        \"미뤄뒀던 일들을 처리하세요\"\n    ];\n    const SosoSentences = [\n        \"이정도면 간단한 외출 쯤이야 ..\",\n        \"마스크 잘 쓰고 다니세요 !\",\n        \"손 잘 씻고 다니세요 !\",\n        \"방심은 금물 !\",\n        \"마스크는 항상 해야합니다\",\n        \"돌아다니는 사람은 자신만이 아니라는 것\",\n        \"타지역의 사람을 조심해야 해요\",\n        \"나갈까 말까 ..?\",\n        \"사회적 거리두기는 필수 !\"\n    ];\n    const BadSentences = [\n        \"나가시지 않는 것을 추천드립니다\",\n        \"꼭 밖에 나가셔야 하나요 ?\",\n        \"이럴땐 집에 숨어야 해요\",\n        \"주변을 조심하세요 !\",\n        \"오히려 타지역에서 온 사람이 위험하겠네요\",\n        \"집에 아무도 초대하지 마세요\",\n        \"당분간은 집에 계시는게 좋을 것 같네요\",\n        \"힘든 출근길에도 조심 !\",\n        \"신나는 퇴근길에도 조심 !\"\n    ];\n    const TerrSentences = [\n        \"외출하지 않으시는게 좋습니다\",\n        \"꼭 밖에 나가셔야 하나요 ?\",\n        \"좀 심각한데요 ..?\",\n        \"집에서 할 재밌는 것을 찾으세요\",\n        \"오히려 타지역에서 온 사람이 위험하겠네요\",\n        \"힘든 출퇴근길이 되겠군요\",\n        \"외 출 금 지\",\n        \"아무도 집에 초대하지 마세요\",\n        \"나 혼자가 최고 !\"\n    ];\n\n\n    const chooseSentence = () => {\n        let RandomNum = Math.floor(Math.random() * GoodSentences.length);\n        if(props.state === 'good') return GoodSentences[RandomNum];\n        else if(props.state === 'soso') return SosoSentences[RandomNum];\n        else if(props.state === 'bad') return BadSentences[RandomNum];\n        else if(props.state === 'terr') return TerrSentences[RandomNum];\n        else return \"Error\";\n    }\n\n    return (\n        <> \n            <div id=\"conditionInfo\">\n                {chooseSentence()}\n            </div>\n        </>\n    );\n}\n\nexport default MakeSentence;","import React, { useState } from 'react';\n\n// interface OtherMenuProps{\n//     bgColor : string\n// }\n\nconst OtherMenu = () => {\n    const [clicked,setClicked] = useState('none');\n    const [aboutClicked,setAboutClicked] = useState('none');\n\n    // const onClickHBG = () => {\n    //     const dropdown : any = document.querySelector('.other-menu');\n    //     const setBgColor : any = document.getElementById('other-menu');\n    //     const HBGColor : any = document.getElementById('btn-hamberger');\n    //     if(clicked === 'none') {\n    //         setClicked('show');\n    //         dropdown.classList.remove('none');\n    //         dropdown.classList.add('show');\n    //         HBGColor.style.color = \"gray\";\n    //         // setBgColor.style.color = props.bgColor;\n    //     } else {\n    //         setClicked('none');\n    //         dropdown.classList.remove('show');\n    //         dropdown.classList.add('none');\n    //         HBGColor.style.color = \"white\";\n    //     }\n    // }\n\n    const onClickAbout = () => {\n        const about = document.querySelector('.other-menu-about');\n        if(aboutClicked === 'none'){\n            setAboutClicked('show');\n            about?.classList.remove('none');\n            about?.classList.add('show');\n        } else {\n            setAboutClicked('none');\n            about?.classList.remove('show');\n            about?.classList.add('none');\n        }\n    }\n\n    const onClickHBG = (e : any) => {\n        e.preventDefault();\n        const wrapper = document.querySelector('.other-menu-wrapper');\n        wrapper?.classList.toggle(\"nav-visible\");\n    }\n\n    return (\n        <>\n            <header>\n                <button aria-label=\"Toggle menu\" className=\"nav-button button-lines button-lines-x close\" \n                        role=\"button\" type=\"button\" onClick={onClickHBG}\n                >\n                    <span className=\"lines\"></span>\n                </button>\n            </header>\n             <nav className=\"nav-wrapper\">\n                <ul className=\"nav\">\n                <li className=\"nav-list\">\n                    <a href=\"#\" onClick={() => window.open('http://ncov.mohw.go.kr/')}>COVID-19\n                    <span className=\"list-entity\">&gt;</span></a>\n                </li>\n                <li className=\"nav-list\">\n                    <a href=\"#\" onClick={() => window.open('http://www.cdc.go.kr/')}>질병관리부\n                    <span className=\"list-entity\">&gt;</span></a>\n                </li>\n                <li className=\"nav-list\">\n                    <a href=\"#\" onClick={() => window.open('http://www.mohw.go.kr/react/index.jsp')}>보건복지부 \n                    <span className=\"list-entity\">&gt;</span></a>\n                </li>\n                <li className=\"nav-list\">\n                    <a href=\"#\" onClick={onClickAbout}>ABOUT \n                    <span className=\"list-entity\">&gt;</span></a>\n                </li>\n                <ul className=\"other-menu-about none\">\n                    <li><a href=\"https://apis.map.kakao.com/\">@KAKAO MAP</a></li>\n                    <li><a href=\"https://github.com/1Seok2/Hack-GreenSky\">@GITHUB</a></li>\n                    <li><a href=\"mailto:unos@khu.ac.kr\">CONTACT</a></li>\n                </ul>\n                </ul>\n            </nav>\n        </>\n    );\n}\n\nexport default OtherMenu;","import React from 'react';\n\ninterface ModalContentsProps {\n    content : string\n}\n\nconst ModalContent = (props : ModalContentsProps) => {\n    return (\n        <p>{props.content}</p>\n    );    \n}\n\nexport default ModalContent;","import React, { Component } from 'react';\nimport ModalContent from './ModalConents';\nimport '../../style/alertModal.css';\n\ninterface ModalProps {\n    idNum : number,\n    contents : string[]\n}\n\nconst AlertModal = (props : ModalProps) => {\n    const onClickClose = () => {\n        const thisModal = document.getElementsByClassName('modal-wrapper')[props.idNum];\n        thisModal.classList.remove('show');\n        thisModal.classList.add('none');\n    }\n    return (\n        <>\n            <div className=\"modal-wrapper show\">\n                <div className=\"modal\">\n                    <div className=\"modal-header\">\n                        공지사항 &amp; Tips\n                        <div className=\"modal-exit\">\n                            <a onClick={onClickClose}>\n                                <i className=\"icon-cancel\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"modal-content\">\n                        {props.contents.map((value) => {\n                            return <ModalContent key={value} content={value}/>\n                        })}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default AlertModal;","import React, { useState } from 'react';\n\nconst Tips = () => {\n    const onClickTips = () => {\n        const modal : any = document.getElementsByClassName('modal-wrapper')[0];\n        modal.classList.remove('none');\n        modal.classList.add('show');\n        const modal2 : any = document.getElementsByClassName('modal-wrapper')[1];\n        modal2.classList.remove('none');\n        modal2.classList.add('show');\n    }\n\n    return (\n        <a href=\"#\" onClick={onClickTips} className=\"btn-tips\">\n            <i className=\"icon-lightbulb\"></i>\n        </a>\n    );\n}\n\nexport default Tips;","import React, { Component, useState, useEffect } from 'react';\nimport MakeSentence from './MakeSentence';\nimport OtherMenu from '../navigation/OtherMenu';\nimport AlertModal from '../modal/alertModal';\nimport Tips from './Tips'\nimport '../../style/Data.css';\nimport '../../style/fontello-6de7bc38/css/mapticon-embedded.css';\n\ninterface DataProps {\n  lat : number,\n  lng : number,\n  patientNum : number,\n  alami : any\n}\n\nconst Data = (props : DataProps) => {\n  const [btnState, setBtnState] = useState('show');\n  const [btnValue, setBtnValue] = useState('icon-map-o');\n  const [nowTime, setNowTime] = useState({\n    nowYear : '',\n    nowMonth : '',\n    nowDate : '',\n    nowHour : '',\n    nowMin : ''\n  });\n\n  const onClickPos = () => {\n    //init();\n    const data : any= document.getElementById('dataContainer');\n    const back : any = document.getElementById('btn-back');\n    const searchBtn : any = document.getElementById('btn-search');\n    const reloadBtn : any = document.getElementById('btn-reload');\n    const tipsBtn : any = document.getElementsByClassName('btn-tips')[0];\n    if(btnState === 'show'){\n      data.classList.remove('show');\n      data.classList.add('none');\n      setBtnState('none');\n      setBtnValue('icon-emo-wink');\n      back.style.color = \"black\";\n      searchBtn.style.color = \"black\";\n      reloadBtn.style.color = \"black\";\n      tipsBtn.style.color = \"black\";\n    } else {\n      data.classList.remove('none');\n      data.classList.add('show');\n      setBtnState('show');\n      setBtnValue('icon-map-o');\n      back.style.color = \"white\";\n      searchBtn.style.color = \"white\";\n      reloadBtn.style.color = \"white\";\n      tipsBtn.style.color = \"white\";\n    }\n  };\n\n  const getNowTime = () => {\n    let nowTime = new Date();\n    setNowTime({\n      nowYear : `${nowTime.getFullYear()}`,\n      nowMonth : nowTime.getMonth()+1 < 10 ? (`0${nowTime.getMonth()+1}`) : `${nowTime.getMonth()+1}`,\n      nowDate : nowTime.getDate() < 10 ? (`0${nowTime.getDate()}`) : `${nowTime.getDate()}`,\n      nowHour : nowTime.getHours() < 10 ? (`0${nowTime.getHours()}`) : `${nowTime.getHours()}`,\n      nowMin : nowTime.getMinutes() < 10 ? (`0${nowTime.getMinutes()}`) : `${nowTime.getMinutes()}`\n    });\n  }\n\n  useEffect(() => {\n    getNowTime();\n    // const Container : any = document.getElementById('dataContainer');\n    // Container.style.backgroundColor = props.alami.conditionBgColor;\n    console.log('rerender');\n  },[nowTime.nowMin]);\n\n  \n\n  return (\n    <>\n      <Tips />\n      <AlertModal idNum={0} contents={[\n        \"⚠️ 필독 - 지도 ⚠️\",\n        \"확진자들의 위치가 안보일 경우 좌측 하단의 현위치 버튼을 여러번 눌러주세요\",\n        \"해외입국자를 제외한 수치 및 표기입니다\",\n        \"좌측 하단의 원들은 확진 판정 받은 환자가 며칠 전에 어디서 판정 받았는지를 나타냅니다\",\n        \"우측 하단 버튼으로 알리미를 볼 수 있습니다\",\n        \"🔎 검색기능\",\n        \"검색기능은 정확한 주소를 입력해야 합니다\",\n        \"ex - 서울시, 강릉시청, 용산구, 부산 해운대, 영통동, 덕영대로\"\n      ]}/>\n      <AlertModal idNum={1} contents={[\n        \"⚠️ 필독 - 알리미 ⚠️\",\n        \"위치파악이 좀 힘드네요 😭\",\n        \"좌측 하단의 현위치 버튼을 천천히 여러번 (권장 : 3번 이상) 눌러주세요\",\n        \"누를수록 위치를 잘 찾습니다\",\n        \"우측 하단 버튼으로 지도를 볼 수 있습니다\",\n        \"우측 상단 버튼으로 코로나 관련 홈페이지들에 방문 할 수 있습니다\"\n      ]}/>\n      <div className=\"dataContainer show\" id=\"dataContainer\">\n        <div className=\"other-menu-wrapper\">\n          <OtherMenu />\n        </div>\n        <div className=\"alami-wrapper\">\n          <div className=\"header\">\n            {/* 현 주소와 시간 표시 */}\n            <h1 id=\"centerAddr\">위치확인이 필요합니다</h1>\n            <h2 id=\"now-time\">{nowTime.nowYear}-{nowTime.nowMonth}-{nowTime.nowDate} {nowTime.nowHour}:{nowTime.nowMin}</h2>\n          </div>\n          <div className=\"contents\">\n            <div id=\"conditionFace\">\n              <i className={`${props.alami.conditionFace}`}></i>\n            </div>\n            <div className=\"data-list\">\n              <h3 id=\"conditionTxt\">{props.alami.conditionTxt}</h3>\n              <MakeSentence state={props.alami.conditionState} />\n              <p className=\"data-list-part\">주변 코로나환자수 : {props.patientNum} 명</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <a href=\"#\" id=\"btn-back\" onClick={onClickPos}><i className={btnValue}></i></a>\n    </>\n  );\n\n}\nexport default Data;","interface DateProps {\n    _month : number,\n    _date : number\n}\n\nconst today = new Date();\nconst year = today.getFullYear();\nconst month = today.getMonth() + 1;\nconst date = today.getDate();\nconst Months = (year%100 === 0 || year%4 === 0) && year%400 !== 0 ? \n        [31,28,31,30,31,30,31,31,30,31,30,31] :\n        [31,29,31,30,31,30,31,31,30,31,30,31];\n\nconst DateGapAcumulator = (props : DateProps) : number => {\n    // 알고리즘 수정 요함\n    let gap : number = 11;\n    if(month === props._month+1 ){\n      gap = date + (Months[props._month-1]-props._date);\n    } else if (month === props._month){\n      gap = date-props._date;\n    }\n    return gap;\n}\n\nexport default DateGapAcumulator;","// global kakao\nimport React, { Component, useState, useEffect } from 'react';\nimport NavBottom from '../navigation/NavBottom';\nimport PositionDistance from './PositionDistance';\nimport { Link } from 'react-router-dom';\nimport Patient from '../../InfectedData.json';\nimport Data from '../alami/Data';\nimport '../../style/search_kakao.css';\nimport '../../style/fontello-6de7bc38/css/mapticon-embedded.css';\nimport DateGapAcumulator from './DayGapAcumulator';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\ndeclare global {\n  interface Window {\n    kakao: any;\n  }\n}\n\n//hooks\nconst Map = () => {\n  const [state,setState] = useState({\n    accuracy: null,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null,\n    timestamp: Date.now(),\n    error: false,\n  });\n  const [stateAlami, setStateAlami] = useState({\n    conditionFace : '',\n    conditionState : '',\n    conditionTxt : '위치 조정 해주세요',\n    conditionBgColor : '#1289A7'\n  });\n  const [countInCircle,setCountInCircle] = useState(0);\n  const [latitude, setLatitude] = useState(37.4882);\n  const [longitude, setLongitude] = useState(127.1026);\n  const [search,setSearch] = useState('');\n  const [formState,setFormState] = useState('none');\n  const mounted = true;\n\n  const onEvent = (event: any) => {\n    if (mounted) {\n      setState({\n        ...state,\n        accuracy: event.coords.accuracy,\n        altitude: event.coords.altitude,\n        altitudeAccuracy: event.coords.altitudeAccuracy,\n        heading: event.coords.heading,\n        speed: event.coords.speed,\n        timestamp: event.timestamp,\n      });\n      setLatitude(event.coords.latitude);\n      setLongitude(event.coords.longitude);\n    }\n  };\n  const onError = (error: any) => {\n    setState({ ...state, error: error.message });\n    console.log('error: ', error);\n  };\n  let map: any;\n\n  const makeArrayPatient = () => {\n    let PatientInfo : Object[] = [];\n    if(Patient.mapData) {\n      Patient.data.map((value) => {\n        let daysGap : number;\n        // daysGap = isInFewDays(value.month, value.day);\n        const curDay = {\n          _month : value.month,\n          _date : value.day\n        }\n        daysGap = DateGapAcumulator(curDay);\n        if(daysGap <= 10){\n          let sliced =  value.latlng.split(', ');\n          let patient = {\n            position : value.address,\n            lat : parseFloat(sliced[0]),\n            lng : parseFloat(sliced[1]),\n            month : value.month,\n            day : value.day\n          }\n          PatientInfo = [...PatientInfo, patient];\n          if(daysGap <= 1){\n            makeMarkerInfected(patient, colorRed);\n          } else if (1 < daysGap && daysGap <= 4){\n            makeMarkerInfected(patient, colorOrg);\n          } else if (4 < daysGap && daysGap <=9){\n            makeMarkerInfected(patient, colorGrn);\n          } else {\n            console.log('MAP none in circle');\n          }\n\n          let distance : number;\n          const getDistance  = {\n            lat : latitude,\n            lng : longitude,\n            _lat : patient.lat,\n            _lng : patient.lng\n          }\n          distance = PositionDistance(getDistance);\n          if(distance < 3600){\n            AddCount();\n          }\n        }\n      });\n    }\n  }\n\n  const AddCount = () => {\n    setCountInCircle((prevCount) => prevCount+1);\n  }\n\n  const makeMarkerMyPos = (_lat : any,_lng : any) => {\n    var markerPosition = new window.kakao.maps.LatLng(\n      _lat,\n      _lng\n    );\n\n    // 마커를 생성합니다\n    var marker = new window.kakao.maps.Marker({\n      position: markerPosition,\n    });\n\n    // 마커가 지도 위에 표시되도록 설정합니다\n    marker.setMap(map);\n    // 지도에 표시할 원을 생성합니다\n    var circle = new window.kakao.maps.Circle({\n      center: new window.kakao.maps.LatLng(\n        _lat,\n        _lng\n      ), // 원의 중심좌표 입니다\n      radius: 2400, // 미터 단위의 원의 반지름입니다 , 대생활반경 4600 , 중생활반경 2400\n      strokeWeight: 1, // 선의 두께입니다\n      strokeColor: '#75B8FA', // 선의 색깔입니다\n      strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\n      strokeStyle: 'solid', // 선의 스타일 입니다\n      fillColor: '#CFE7FF', // 채우기 색깔입니다\n      fillOpacity: 0.6, // 채우기 불투명도 입니다\n    });\n\n    // 지도에 원을 표시합니다\n    circle.setMap(map);\n  };\n\n  const colorRed = '#eb4d4b';\n  const colorOrg = '#f39c12';\n  const colorGrn = '#27ae60';\n  //patient circles\n  const makeMarkerInfected = (_patient : any, color:string) => {\n    const circle = new window.kakao.maps.Circle({\n      center: new window.kakao.maps.LatLng(_patient.lat, _patient.lng), // 원의 중심좌표 입니다\n      radius: 1200, // 미터 단위의 원의 반지름입니다\n      strokeWeight: 1, // 선의 두께입니다\n      strokeColor: `${color}`, // 선의 색깔입니다\n      strokeOpacity: 0.7, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\n      strokeStyle: 'solid', // 선의 스타일 입니다\n      fillColor: `${color}`, // 채우기 색깔입니다\n      fillOpacity: 0.7, // 채우기 불투명도 입니다\n    });\n    \n    // 지도에 원을 표시합니다\n    circle.setMap(map);\n  };\n\n  const btn_reload = () => {\n    const loadedCoords = localStorage.getItem('coords');\n    if(loadedCoords === null) {\n      window.location.reload();\n    } else {\n      const parsedCoords = JSON.parse(loadedCoords);\n      setLatitude(parsedCoords.lat);\n      setLongitude(parsedCoords.lng);\n      setCountInCircle(0);\n      window.kakao.maps.load(() => {\n        DeleteMapElements();\n        let container = document.getElementById('map');\n        let options = {\n          center: new window.kakao.maps.LatLng(\n            latitude,\n            longitude\n          ),\n          level: 8,\n        };\n        map = new window.kakao.maps.Map(container, options);\n        let geocoder = new window.kakao.maps.services.Geocoder();\n\n        const searchAddrFromCoords = (coords : any, callback : any) : void=> {\n          // 좌표로 행정동 주소 정보를 요청합니다\n          geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);         \n        }\n        const displayCenterInfo = (result : any, status : any) => {\n          if (status === window.kakao.maps.services.Status.OK) {\n            var infoDiv : any = document.getElementById('centerAddr');\n            for(var i = 0; i < result.length; i++) {\n              // 행정동의 region_type 값은 'H' 이므로\n              if (result[i].region_type === 'H') {\n                infoDiv.innerHTML = result[i].address_name;\n                break;\n              }\n            }\n          }    \n        }\n        // 현재 지도 중심좌표로 주소를 검색해서 상단에 표시합니다\n        searchAddrFromCoords(map.getCenter(), displayCenterInfo);\n\n      \n      });\n      makeMarkerMyPos(latitude, longitude);\n\n      makeArrayPatient();\n    }\n    init();\n  }\n\n  const btn_search = () => {\n    const form : any= document.querySelector('.form-search');\n    const menu_wrap = document.querySelector('#menu_wrap');\n    if(formState === 'none'){\n      form.classList.remove('none');\n      form.classList.add('show');\n      setFormState('show');\n      menu_wrap?.classList.remove('show');\n      menu_wrap?.classList.add('none');\n    } else {\n      form.classList.remove('show');\n      form.classList.add('none');\n      setFormState('none');\n      menu_wrap?.classList.remove('show');\n      menu_wrap?.classList.add('none');\n    }\n  }\n\n  const onChangeSearch = (e : any) =>{\n    setSearch(e.target.value);\n  }\n\n  const onSubmitForm = (e : any) => {\n    const menu_wrap = document.querySelector('#menu_wrap');\n    menu_wrap?.classList.toggle('none');\n    menu_wrap?.classList.toggle('show');\n    e.preventDefault();\n    DeleteMapElements();\n    window.kakao.maps.load(() => {\n      DeleteMapElements();\n      let container = document.getElementById('map');\n      let options = {\n        center: new window.kakao.maps.LatLng(\n          latitude,\n          longitude\n        ),\n        level: 8,\n      };\n      map = new window.kakao.maps.Map(container, options);\n      // let geocoder = new window.kakao.maps.services.Geocoder();\n\n      // geocoder.addressSearch(search, function(result : any, status : any) {\n\n      //   // 정상적으로 검색이 완료됐으면 \n      //   if (status === window.kakao.maps.services.Status.OK) {\n      //     var coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\n\n      //     // 결과값으로 받은 위치를 마커로 표시합니다\n      //     var marker = new window.kakao.maps.Marker({\n      //       map: map,\n      //       position: coords\n      //     });\n\n      //     map.setCenter(coords);\n      //     makeMarkerMyPos(result[0].y, result[0].x);\n      //   } \n      // });\n\n      // 마커를 담을 배열입니다\n      var markers : any= [];\n\n      // 장소 검색 객체를 생성합니다\n      var ps = new window.kakao.maps.services.Places();  \n\n      // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n      var infowindow = new window.kakao.maps.InfoWindow({zIndex:1});\n\n      // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n      // 인포윈도우에 장소명을 표시합니다\n      const displayInfowindow = (marker : any , title : any) => {\n        var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\n\n        infowindow.setContent(content);\n        infowindow.open(map, marker);\n      }\n\n      // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n      const removeAllChildNods = (el : any) => {   \n        while (el.hasChildNodes()) {\n            el.removeChild (el.lastChild);\n        }\n      }\n\n      // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n      const displayPagination = (pagination: any) => {\n        var paginationEl : any = document.getElementById('pagination'),\n            fragment : any = document.createDocumentFragment(),\n            i; \n\n        // 기존에 추가된 페이지번호를 삭제합니다\n        while (paginationEl.hasChildNodes()) {\n            paginationEl.removeChild (paginationEl.lastChild);\n        }\n\n        for (i=1; i<=pagination.last; i++) {\n            var el = document.createElement('a');\n            el.href = \"#\";\n            el.innerHTML = `${i}`;\n\n            if (i===pagination.current) {\n                el.className = 'on';\n            } else {\n                el.onclick = (function(i) {\n                    return function() {\n                        pagination.gotoPage(i);\n                    }\n                })(i);\n            }\n\n            fragment.appendChild(el);\n        }\n        paginationEl.appendChild(fragment);\n      }\n\n      // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n      const removeMarker = () => {\n        for ( var i = 0; i < markers.length; i++ ) {\n            markers[i].setMap(null);\n        }   \n        markers = [];\n      }\n\n      // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n      const addMarker = (position : any, idx : any, title? : any) => {\n        var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\n            imageSize = new window.kakao.maps.Size(36, 37),  // 마커 이미지의 크기\n            imgOptions =  {\n                spriteSize : new window.kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\n                spriteOrigin : new window.kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n                offset: new window.kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n            },\n            markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n                marker = new window.kakao.maps.Marker({\n                position: position, // 마커의 위치\n                image: markerImage \n            });\n\n        marker.setMap(map); // 지도 위에 마커를 표출합니다\n        markers.push(marker);  // 배열에 생성된 마커를 추가합니다\n\n        return marker;\n      }\n\n      // 검색결과 항목을 Element로 반환하는 함수입니다\n      const getListItem = (index : any, places : any) => {\n\n        var el : any = document.createElement('li'),\n        itemStr = '<span class=\"markerbg marker_' + (index+1) + '\"></span>' +\n                    '<div class=\"info\">' +\n                    '   <h5>' + places.place_name + '</h5>';\n\n        if (places.road_address_name) {\n            itemStr += '    <span>' + places.road_address_name + '</span>' +\n                        '   <span class=\"jibun gray\">' +  places.address_name  + '</span>';\n        } else {\n            itemStr += '    <span class=\"make-address\">' +  places.address_name  + '</span>'; \n        }\n                    \n          itemStr += '  <span class=\"tel\">'+ `<a href=\"tel:${places.phone}\">${places.phone}</a>` + '</span>' +\n                    '</div>';           \n\n        el.innerHTML = itemStr;\n        el.className = 'item';\n\n        return el;\n      }\n\n      // 검색 결과 목록과 마커를 표출하는 함수입니다\n      const displayPlaces = (places : any) => {\n\n        var listEl = document.getElementById('placesList'), \n        menuEl : any = document.getElementById('menu_wrap'),\n        fragment = document.createDocumentFragment(), \n        bounds = new window.kakao.maps.LatLngBounds(), \n        listStr = '';\n        \n        // 검색 결과 목록에 추가된 항목들을 제거합니다\n        removeAllChildNods(listEl);\n\n        // 지도에 표시되고 있는 마커를 제거합니다\n        removeMarker();\n        \n        for ( var i=0; i<places.length; i++ ) {\n\n            // 마커를 생성하고 지도에 표시합니다\n            var placePosition = new window.kakao.maps.LatLng(places[i].y, places[i].x),\n                marker : any = addMarker(placePosition, i), \n                itemEl : any = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n\n            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n            // LatLngBounds 객체에 좌표를 추가합니다\n            bounds.extend(placePosition);\n\n            // 마커와 검색결과 항목에 mouseover 했을때\n            // 해당 장소에 인포윈도우에 장소명을 표시합니다\n            // mouseout 했을 때는 인포윈도우를 닫습니다\n            (function(marker, title) {\n                window.kakao.maps.event.addListener(marker, 'mouseover', function() {\n                    displayInfowindow(marker, title);\n                });\n\n                window.kakao.maps.event.addListener(marker, 'mouseout', function() {\n                    infowindow.close();\n                });\n\n                itemEl.onmouseover =  function () {\n                    displayInfowindow(marker, title);\n                };\n\n                itemEl.onmouseout =  function () {\n                    infowindow.close();\n                };\n            })(marker, places[i].place_name);\n\n            fragment.appendChild(itemEl);\n        }\n\n        // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\n        listEl?.appendChild(fragment);\n        menuEl.scrollTop = 0;\n\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n        map.setBounds(bounds);\n      }\n\n\n      // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n      const placesSearchCB = (data : any, status : any, pagination : any) => {\n        if (status === window.kakao.maps.services.Status.OK) {\n\n            // 정상적으로 검색이 완료됐으면\n            // 검색 목록과 마커를 표출합니다\n            displayPlaces(data);\n\n            // 페이지 번호를 표출합니다\n            displayPagination(pagination);\n\n        } else if (status === window.kakao.maps.services.Status.ZERO_RESULT) {\n\n            alert('검색 결과가 존재하지 않습니다.');\n            return;\n\n        } else if (status === window.kakao.maps.services.Status.ERROR) {\n\n            alert('검색 결과 중 오류가 발생했습니다.');\n            return;\n\n        }\n      } \n\n      // 키워드 검색을 요청하는 함수입니다\n      const searchPlaces = () => {\n\n        var key : any = document.getElementById('keyword');\n        let keyword : any = key.value;\n\n        if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\n            alert('키워드를 입력해주세요!');\n            return false;\n        }\n\n        // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n        ps.keywordSearch( keyword, placesSearchCB); \n      }\n\n      // 키워드로 장소를 검색합니다\n      searchPlaces();\n\n      \n    \n    });\n    setCountInCircle(0);\n    makeArrayPatient();\n    const form : any= document.querySelector('.form-search');\n    form.classList.remove('show');\n    form.classList.add('none');\n    setFormState('none');\n  }\n  \n  const DeleteMapElements = () => {\n    let deleteMap : any = document.getElementById(\"map\");\n    while ( deleteMap.hasChildNodes() ) { deleteMap.removeChild( deleteMap.firstChild ); }\n  }\n\n  const init = () => {\n    const Container : any = document.getElementById('dataContainer');\n    if(countInCircle < 1){\n      setStateAlami({\n        conditionState : 'good',\n        conditionTxt : '좋음',\n        conditionFace : 'icon-smile',\n        conditionBgColor : '#1289A7'\n      });\n      Container.style.backgroundColor = stateAlami.conditionBgColor;\n    } else if ( 1 <= countInCircle && countInCircle <=2 ){\n      setStateAlami({\n        conditionState : 'soso',\n        conditionTxt : '조금 위험',\n        conditionFace : 'icon-meh',\n        conditionBgColor : '#009432'\n      });\n      Container.style.backgroundColor = stateAlami.conditionBgColor;\n    } else if ( 3 <= countInCircle && countInCircle <= 5 ){\n      setStateAlami({\n        conditionState : 'bad',\n        conditionTxt : '위험',\n        conditionFace : 'icon-frown',\n        conditionBgColor : '#cc8e35'\n      });\n      Container.style.backgroundColor = stateAlami.conditionBgColor;\n    } else if ( 6<= countInCircle ) {\n      setStateAlami({\n        conditionState : 'terr',\n        conditionTxt : '매우 위험',\n        conditionFace : 'icon-emo-devil',\n        conditionBgColor : '#b33939'\n      });\n      Container.style.backgroundColor = stateAlami.conditionBgColor;\n    }\n  }\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(onEvent, onError);\n    \n    //this.watchId = navigator.geolocation.watchPosition(this.onEvent, this.onError);\n    const script = document.createElement('script');\n    script.async = true;\n    script.src =\n      `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${API_KEY}`;\n    document.head.appendChild(script);\n    \n    \n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        DeleteMapElements();\n        let container : any= document.getElementById('map');\n\n        let options = {\n          // center: new window.kakao.maps.LatLng(37.506502, 127.053617),\n          center: new window.kakao.maps.LatLng(\n            latitude,\n            longitude\n          ),\n          level: 8,\n        };\n        map = new window.kakao.maps.Map(container, options);\n      });\n\n      const saveCoords = (obj: any) => {\n        localStorage.setItem('coords', JSON.stringify(obj));\n      };\n\n      const coordObj = {\n        lat: latitude,\n        lng: longitude,\n      };\n      if (latitude !== 37.4882) saveCoords(coordObj);\n\n      makeMarkerMyPos(latitude,longitude);\n    };\n    init();\n    return(() =>{\n      DeleteMapElements()\n    });\n  }, [latitude, longitude]);\n\n  const btn_close = () => {\n    const menu_wrap = document.querySelector('#menu_wrap');\n    menu_wrap?.classList.toggle('none');\n    menu_wrap?.classList.toggle('show');\n  }\n\n  return (\n    <>\n      <div id=\"map\"></div>\n      <div id=\"menu_wrap\" className=\"bg_white none\">\n        <div className=\"option\">\n          <div onClick={btn_close} className=\"btn-search-close\"><i className=\"icon-cancel\"></i>\n            <form onSubmit={btn_search} className=\"kakao-search-form\">\n                키워드 : <input type=\"text\" value={search} id=\"keyword\" size={15} /> \n                <button type=\"submit\">검색하기</button> \n            </form>\n          </div>\n        </div>\n        <ul id=\"placesList\"></ul>\n        <div id=\"pagination\"></div>\n      </div>\n      <div className=\"options\">\n        <Data lat={latitude} \n              lng={longitude}\n              patientNum={countInCircle}\n              alami={stateAlami}\n        />\n        <ul className=\"mapNav\">\n          {/* <li className=\"mapNav-list-title\">확진자 발생 추이</li> */}\n          <li className=\"navGrn\">\n            <i className=\"icon-circle icon-circle-green\"></i> 5~9 일 사이\n          </li>\n          <li className=\"navOrg\">\n            <i className=\"icon-circle icon-circle-orange\"></i> 2~4 일 사이\n          </li>\n          <li className=\"navRed\">\n            <i className=\"icon-circle icon-circle-red\"></i> 1일 이내\n          </li>\n        </ul>\n        <form className=\"form-search none\" onSubmit={onSubmitForm}>\n          <input type=\"text\" value={search} onChange={onChangeSearch}/>\n        </form>\n        <a href=\"#\" className=\"btn\" id=\"btn-search\" onClick={btn_search}><i className=\"icon-search\"></i></a>\n        <a href=\"#\" className=\"btn\" id=\"btn-reload\" onClick={btn_reload}><i className=\"icon-location\"></i></a>\n      </div>\n      <NavBottom />\n      {/* <InfectedMarker /> */}\n    </>\n  );\n}\nexport default Map;","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Data from './components/alami/Data';\nimport Map from './components/map/Map';\n\nconst App = () => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Route path=\"/\" component={Map} />\n    </HashRouter>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Map from './components/map/Map';\nimport Data from './components/alami/Data';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}